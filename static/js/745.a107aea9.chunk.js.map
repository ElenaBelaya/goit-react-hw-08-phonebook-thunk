{"version":3,"file":"static/js/745.a107aea9.chunk.js","mappings":"+UAIaA,GAAUC,EAAAA,EAAAA,GAAOC,EAAAA,GAAPD,CAAH,4OAYPE,EAAOF,EAAAA,EAAAA,KAAH,6EAKJG,EAAQH,EAAAA,EAAAA,MAAH,qHAOLI,GAAQJ,EAAAA,EAAAA,GAAOK,EAAAA,GAAPL,CAAH,sHAQLM,EAASN,EAAAA,EAAAA,OAAH,4N,gHC7BbO,EAAUC,MACVC,EAAaD,MAuCnB,UArCkB,WAChB,IAAME,GAAQC,EAAAA,EAAAA,IAAYC,EAAAA,EAAAA,UACpBC,GAAWC,EAAAA,EAAAA,MAUjB,OACE,SAAC,EAAAZ,KAAD,WACE,SAAC,KAAD,CACEa,cAAe,CAAEC,MAAO,GAAIC,SAAU,IACtCC,SAbe,SAACC,EAAD,GAAiC,IAAjBC,EAAgB,EAAhBA,UAEnC,GADAP,EAASQ,EAAAA,EAAAA,MAAqBF,IAC1BT,EACF,OAAOY,MAAM,oBAEbF,EAAU,CAAEG,OAAQ,IAEvB,EAIG,SAIG,cAAGC,aAAH,OACC,UAAC,EAAAzB,QAAD,CAAS0B,aAAa,MAAtB,WACE,UAAC,EAAAtB,MAAD,CAAOuB,QAASnB,EAAhB,kBAEE,SAAC,EAAAH,MAAD,CAAOuB,GAAIpB,EAASqB,KAAK,QAAQC,KAAK,cAExC,UAAC,EAAA1B,MAAD,CAAOuB,QAASjB,EAAhB,sBAEE,SAAC,EAAAL,MAAD,CAAOuB,GAAIlB,EAAYmB,KAAK,WAAWC,KAAK,iBAG9C,SAAC,EAAAvB,OAAD,CAAQsB,KAAK,SAAb,sBAXH,KAiBR,C","sources":["views/LoginView.Styled.jsx","views/LoginView.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nimport { Form, Field } from 'formik';\n\nexport const FormBox = styled(Form)`\n  display: inline-flex;\n  flex-direction: column;\n  border: 3px solid #ea9999;\n  border-radius: 5px;\n  padding: 30px;\n  margin: 30px 10px;\n  text-align: start;\n  background-color: #f8dfdf;\n  width: 50%;\n`;\n\nexport const Main = styled.main`\n  text-align: center;\n  background-color: #eac9e7;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  justify-content: space-between;\n  margin: 10px 0px;\n  color: #795151;\n`;\n\nexport const Input = styled(Field)`\n  margin-left: 10px;\n  border: none;\n  border-radius: 4px;\n  height: 25px;\n  width: 80%;\n`;\n\nexport const Button = styled.button`\n  margin: 15px 0px;\n  padding: 4px 0px;\n  background-color: #ea9999;\n  border: none;\n  border-radius: 4px;\n  color: #795151;\n  font-family: Segoe UI;\n  font-size: 16px;\n  cursor: pointer;\n`;\n","import shortid from 'shortid';\nimport { Formik } from 'formik';\nimport { useDispatch, useSelector } from 'react-redux';\nimport authOperations from 'redux/auth/auth-operations';\nimport authSelectors from 'redux/auth/auth-selectors';\nimport { FormBox, Main, Label, Input, Button } from './LoginView.Styled';\n\nconst emailId = shortid();\nconst passwordId = shortid();\n\nconst LoginView = () => {\n  const error = useSelector(authSelectors.getError);\n  const dispatch = useDispatch();\n  const handleSubmit = (credentials, { resetForm }) => {\n    dispatch(authOperations.logIn(credentials));\n    if (error) {\n      return alert('Please try again');\n    } else {\n      resetForm({ values: '' });\n    }\n  };\n\n  return (\n    <Main>\n      <Formik\n        initialValues={{ email: '', password: '' }}\n        onSubmit={handleSubmit}\n      >\n        {({ isSubmitting }) => (\n          <FormBox autoComplete=\"off\">\n            <Label htmlFor={emailId}>\n              mail\n              <Input id={emailId} type=\"email\" name=\"email\" />\n            </Label>\n            <Label htmlFor={passwordId}>\n              password\n              <Input id={passwordId} type=\"password\" name=\"password\" />\n            </Label>\n\n            <Button type=\"submit\">Submit</Button>\n          </FormBox>\n        )}\n      </Formik>\n    </Main>\n  );\n};\n\nexport default LoginView;\n"],"names":["FormBox","styled","Form","Main","Label","Input","Field","Button","emailId","shortid","passwordId","error","useSelector","authSelectors","dispatch","useDispatch","initialValues","email","password","onSubmit","credentials","resetForm","authOperations","alert","values","isSubmitting","autoComplete","htmlFor","id","type","name"],"sourceRoot":""}